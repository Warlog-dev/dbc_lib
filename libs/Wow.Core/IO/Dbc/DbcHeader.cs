using Wow.Core.IO.Binary;

namespace Wow.Core.IO.Dbc;

public class DbcHeader
{
    public string Signature { get; set; }
    
    public uint RecordCount { get; set; }
    
    public uint FieldCount { get; set; }
    
    public uint RecordSize { get; set; }
    
    public uint StringBlockSize { get; set; }

    public uint TableHash { get; set; }
    
    public int LayoutHash { get; set; }
    
    public int MinId { get; set; }
    
    public int MaxId { get; set; }
    
    public int Locale { get; set; }
    
    public int CopyTableSize { get; set; }
    
    public DbcHeaderFlags Flags { get; set; }

    public ushort IdIndex { get; set; }
    
    public uint TotalFieldSize { get; set; }
    
    public uint CommonDataTableSize { get; set; }
    
    public uint InternalRecordSize { get; set; }

    public int AutoGeneratedColumns { get; set; }
    
    public int HeaderSize = 32;
    
    public int StringTableOffset = 16;
    
    public int[] OffsetLengths { get; set; }

    public Dictionary<int, int> OffsetDuplicates;

    public DbcHeader(DbcReader reader, string signature)
    {
        OffsetLengths = Array.Empty<int>();
        OffsetDuplicates = new Dictionary<int, int>();
        Signature = signature;
        
        RecordCount = reader.ReadUInt32();
        FieldCount = reader.ReadUInt32();
        RecordSize = reader.ReadUInt32();
        StringBlockSize = reader.ReadUInt32();
    }
}